RIFF: http://www.johnloomis.org/cpe102/asgn/asgn1/riff.html

(
basically, 
4 bytes chunkID
4 bytes chunklength
<chunklength> bytes chunkdata (plus extra byte if not even length)
)

special chunks (like "RIFF") have one extra field
(
4 bytes chunkID
4 bytes chunklength
4 bytes formtype ("WAVE", for example)
<chunklength> bytes chunkdata (plus extra byte if not even length)
	(
	sub-chunks
	)
)

RIFX:
network byte order / big-endian

XFIR:
network byte order / big-endian
EXCEPT
(
chunkID
chunklength
formtype (???)
), which are little-endian

SHOCKWAVE FORMAT:

FIRX
(
chunklength x
formtype "MV93"
data (entire file, minus chunkID & chunklength), chunklength bytes long
)

sub-chunks:
imap 
{
	chunklength
	data (format unknown)
	//probably an insignificant mapping chunk
}

mmap
{
	length
	data (first 0x18 bytes are unknown)
	/*following those bytes is a list of chunks
	That's where this gets good
	this is the signifnicant mapping chunk*/
	entry
	{
		fourcc chunkID
		uint32 length (not sure why include this, since these entries are nothing but pointers to the chunk)
		unit32 offset (0-based)
		//remaining 8 bytes are unknown, and always seem to be set to 0
		//in total, each entry is 0x14 in length
	}

}

KEY*
{
	length
	data
	/*
	similar to mmap, this lists chunks found in the file
	unlike mmap, this doesn't include EVERYTHING. Entries in this 
	chunk all seem to be indentical if the chunk type they refer to is 
	indentical. It probably has something to do with format of different
	chunks, or possibly cast members, in specific. The exact way this
	even works is unknown, there are no length or offset fields in any
	of the entries. More research is required
	*/
}

free
(
	length always 0
	//but entire entry is always 0x14 in size
	//these are basically just free space, and seem to serve no real purpose
	//this part of docu is now outdated
)

XMED
(
	length
	followed immediatly by data <length> in size
	//these seem to contain texts and flash SWF, from current observations
)

snd 
{
	length (always 0)
	//purpose unknown, seems to trail SWA audio
}

ediM
{
	length
	data <length> in size
	//contains SWA audio
}

BITD
{
	length
	data
	//definitely bitmap cast members, but i am unsure how to parse them
}

shockwave format types:
DXR : protected/encrypted
DCR : compressed (via zlib???)
DIR : doesn't seem to be encrypted or compressed
CXT : protected/encrypted
CCT : compressed
CST : nothing special... 

purposes:
D*R : movie, runs stand-alone, may load C*T's as dependencies
C*T : 
(
external"cast" , basically an external library of stuff. 
D*R's are made of multiple internal casts, and will attempt to
load external casts if any have been linked.
Some movies can play without the external casts
External casts are essentially the same structure as a movie,
except they only contain one cast, and cannot run as a stand-alone application.
)

extra notes:
Spybotics, does not actually require its external casts to run.
However, this might impact the music*

*All remaining copies/archives of Spybotics: The Nightfall Incident
do not have the sound_level_<1-5>.cct, and the snd_netload_<1-5>.cct files.
It's quite possible official releases never actually did use them.
the sound_level_<x> files are all empty, and the snd_netload_<x> files
contain alternative soundtracks. These tracks probably are for databattles.

