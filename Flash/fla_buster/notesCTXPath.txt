
ctx.moveTo(272.95,172.25);
ctx.lineTo(273.05,172.25);
ctx.moveTo(273.05,172.25);
ctx.lineTo(273.1,172.3);
ctx.moveTo(273.1,172.3);
ctx.quadraticCurveTo(274.75,170.6,277.55,168.45);
ctx.moveTo(277.55,168.45);
ctx.lineTo(277.8,168.05);
ctx.moveTo(277.8,168.05);
ctx.quadraticCurveTo(278.7,167,279.8,166.7);
ctx.moveTo(279.8,166.7);
ctx.lineTo(283.4,164.15);
ctx.moveTo(283.4,164.15);
ctx.quadraticCurveTo(291.8,158.45,296.05,156.2);
ctx.moveTo(296.05,156.2);
ctx.quadraticCurveTo(304.15,152,313.75,149.9);
ctx.moveTo(313.75,149.9);
ctx.lineTo(323.4,147.05);
ctx.moveTo(323.4,147.05);
ctx.quadraticCurveTo(328.1,146.2,332.8,143.9);
ctx.moveTo(332.8,143.9);
ctx.quadraticCurveTo(338.95,141.5,340.85,140.4);
ctx.moveTo(340.85,140.4);
ctx.quadraticCurveTo(343,139.2,344.1,138.3);
ctx.moveTo(344.1,138.3);
ctx.quadraticCurveTo(345,137.6,345.95,137.8);
ctx.moveTo(345.95,137.8);
ctx.lineTo(346.7,137.7);
ctx.moveTo(346.7,137.7);
ctx.quadraticCurveTo(347.5,137.95,347.2,139.05);
ctx.moveTo(347.2,139.05);
ctx.lineTo(342.65,144);
ctx.moveTo(342.65,144);
ctx.lineTo(338.05,150.8);
ctx.moveTo(338.05,150.8);
ctx.lineTo(339.55,149.55);
ctx.moveTo(339.55,149.55);
ctx.quadraticCurveTo(343.15,146.8,344.75,146.2);
ctx.moveTo(344.75,146.2);
ctx.lineTo(345.7,146.05);
ctx.moveTo(345.7,146.05);
ctx.quadraticCurveTo(346.9,146.3,346.55,147.55);
ctx.moveTo(346.55,147.55);
ctx.lineTo(344.75,151.55);
ctx.moveTo(344.75,151.55);
ctx.quadraticCurveTo(343.25,154.45,342.4,157.9);
ctx.moveTo(342.4,157.9);
ctx.quadraticCurveTo(339.85,167.3,339.45,186.7);
ctx.moveTo(339.45,186.7);
ctx.lineTo(339.75,198.55);
ctx.moveTo(339.75,198.55);
ctx.lineTo(339.8,198.65);
ctx.moveTo(339.8,198.65);
ctx.lineTo(339.9,199.95);
ctx.moveTo(339.9,199.95);
ctx.lineTo(339.85,200.95);
ctx.moveTo(339.85,200.95);
ctx.lineTo(339.9,201.7);
ctx.moveTo(339.9,201.7);
ctx.quadraticCurveTo(340.2,202,340.1,202.75);
ctx.moveTo(340.1,202.75);
ctx.lineTo(340,203.95);
ctx.moveTo(340,203.95);
ctx.quadraticCurveTo(340.5,215.4,340.3,216.25);
ctx.moveTo(340.3,216.25);
ctx.lineTo(339.9,217);
ctx.moveTo(339.9,217);
ctx.lineTo(339.9,217.45);
ctx.moveTo(339.9,217.45);
ctx.lineTo(339.2,222.1);
ctx.moveTo(339.2,222.1);
ctx.lineTo(339.25,221.95);
ctx.moveTo(339.25,221.95);
ctx.lineTo(339.35,222.2);
ctx.moveTo(339.35,222.2);
ctx.lineTo(338.95,223.25);

ctx.moveTo(338.95,223.25);
ctx.lineTo(338.55,224.65);
ctx.moveTo(338.55,224.65);
ctx.quadraticCurveTo(336.65,231.5,334.6,235.6);
ctx.moveTo(334.6,235.6);
ctx.quadraticCurveTo(331.95,240.35,326.6,246.2);
ctx.moveTo(326.6,246.2);
ctx.lineTo(321.55,251.2);
ctx.moveTo(321.55,251.2);
ctx.quadraticCurveTo(318.3,253.65,314.4,255.45);
ctx.moveTo(314.4,255.45);
ctx.lineTo(309.2,257.9);
ctx.moveTo(309.2,257.9);
ctx.lineTo(305.55,258.95);
ctx.moveTo(305.55,258.95);
ctx.lineTo(304.25,259.45);
ctx.moveTo(304.25,259.45);
ctx.lineTo(299.35,260.25);
ctx.moveTo(299.35,260.25);
ctx.lineTo(287.45,259);
ctx.moveTo(287.45,259);
ctx.lineTo(281,257.3);
ctx.moveTo(281,257.3);
ctx.quadraticCurveTo(271.85,253.6,267.55,249.8);
ctx.moveTo(267.55,249.8);
ctx.quadraticCurveTo(264.95,247.5,260.9,242.7);
ctx.moveTo(260.9,242.7);
ctx.lineTo(256.55,236.05);
ctx.moveTo(256.55,236.05);
ctx.lineTo(253.4,229.7);
ctx.moveTo(253.4,229.7);
ctx.quadraticCurveTo(251.75,225.9,251.4,221.15);
ctx.moveTo(251.4,221.15);
ctx.quadraticCurveTo(250.7,218.8,250.7,216.25);
ctx.moveTo(250.7,216.25);
ctx.lineTo(250.8,209.45);
ctx.moveTo(250.8,209.45);
ctx.quadraticCurveTo(250.8,206.65,251.65,202.9);
ctx.moveTo(251.65,202.9);
ctx.lineTo(255.95,187.95);
ctx.moveTo(255.95,187.95);
ctx.quadraticCurveTo(257.15,184.8,261.4,177.45);
ctx.moveTo(261.4,177.45);
ctx.quadraticCurveTo(264.6,171.75,268.4,168.7);
ctx.moveTo(268.4,168.7);
ctx.lineTo(272.55,164.4);
ctx.moveTo(272.55,164.4);
ctx.lineTo(275,162.35);
ctx.moveTo(275,162.35);
ctx.lineTo(275.65,161.5);
ctx.moveTo(275.65,161.5);
ctx.quadraticCurveTo(276.9,160.7,277.25,161.7);
ctx.moveTo(277.25,161.7);
ctx.quadraticCurveTo(277.5,162.5,277.25,163.3);
ctx.moveTo(277.25,163.3);
ctx.quadraticCurveTo(276.8,165.1,273,171.8);
ctx.moveTo(273,171.8);
ctx.lineTo(273.05,171.95);
ctx.moveTo(273.05,171.95);
ctx.lineTo(272.95,172.25);

ctx.fillStyle = "#ff0000";
ctx.fill();

//
ctx.fillStyle = "#00ff00";
//ctx.strokeStyle = "rgba(0,0,0,0)";
ctx.strokeStyle = "#000000";
ctx.beginPath();
ctx.moveTo(20,20);
ctx.lineTo(70,20);
//ctx.moveTo(71,20);
ctx.lineTo(70,70);
//ctx.moveTo(70,70);
ctx.lineTo(20,70);
ctx.lineTo(20,20);
ctx.moveTo(30,30);
ctx.lineTo(60,30);
ctx.lineTo(60,60);
ctx.lineTo(30,60);
ctx.lineTo(30,30);
ctx.fill();
ctx.stroke();


//
ctx.fillStyle = "#00ff00";
//ctx.strokeStyle = "rgba(0,0,0,0)";
ctx.strokeStyle = "#000000";
ctx.beginPath();
ctx.moveTo(20,20);
ctx.lineTo(70,20);
ctx.moveTo(30,30);
ctx.lineTo(60,30);
ctx.moveTo(70,20);
ctx.lineTo(70,70);
ctx.moveTo(60,30);
ctx.lineTo(60,60);
ctx.moveTo(70,70);
ctx.lineTo(20,70);
ctx.moveTo(60,60);
ctx.lineTo(30,60);
ctx.moveTo(20,70);
ctx.lineTo(20,20);
ctx.moveTo(30,60);
ctx.lineTo(30,30);
ctx.fill();
ctx.stroke();

//
ctx.fillStyle = "#00ff00";
//ctx.strokeStyle = "rgba(0,0,0,0)";
ctx.strokeStyle = "#000000";
ctx.beginPath();
ctx.moveTo(20,20);
for(var i=0; i < 16; i++) {
var x = Math.floor(Math.random() * 600);
var y = Math.floor(Math.random() * 400);
console.log(x + " , " + y);
ctx.lineTo(x,y);
}
ctx.fill();
ctx.stroke();

//notes
fill() works if the path is longer than two lines, AND has no breaks in the middle
however, a path can have a break between final segment and first
fill border runs from first endpoint to the last, in the path is open
else, it fills the entirety



